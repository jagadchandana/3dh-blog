# name: Continuous Integration and Deployment

# on:
#   push:
#     branches: "main"

# jobs:
#   laravel-tests:
#     runs-on: ubuntu-latest

#     services:
#       mysql:
#         image: mysql:8.0
#         env:
#           MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#           # MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
#           MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
#           MYSQL_USER: ${{ secrets.DB_USER }}
#           MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
#         ports:
#           - 3306:3306
#         options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3


#     steps:
#       - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#         with:
#           php-version: "8.2"
#       - uses: actions/checkout@v3
#       - name: Copy .env
#         run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#       # - name: build production
#       #   run: npm run build production
#       - name: Install Dependencies
#         run: |
#           composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#       - name: Generate key
#         run: php artisan key:generate
#       # - name: DB migrate
#       #   run: php artisan migrate
#       - name: Clear Config and Cache
#         run: |
#           php artisan config:clear
#           php artisan route:clear
#       # php artisan cache:clear
#       - name: Set Directory Permissions
#         run: chmod -R 777 storage bootstrap/cache
#       # - name: Install Node.js
#       #   uses: actions/setup-node@v3
#       #   with:
#       #     node-version: '18'
#       # - name: Install npm Dependencies
#       #   run: |
#       #     npm install -g npm@latest
#       #     npm cache clean --force
#       # - name: Build Frontend Assets
#       #   run: npm run build
#       # - name: Upload Artifact
#       #   uses: actions/upload-artifact@v3
#       #   with:
#       #     name: dist
#       #     path: public/
#       # - name: Debug Server Connectivity
#       #   run: |
#       #     ping -c 4 ftp.corelogic.cloud
#       #     telnet ftp.corelogic.cloud 21
#       - name: Deploy to Server
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.3
#         with:
#           server: premium304.web-hosting.com
#           username: blog-jagad@3dh.blog.corelogic.cloud
#           password: blog@1qaz2wsx
#           server-dir: /3dh.blog.corelogic.cloud/
#           timeout: 18000000

# # name: Continuous Integration and Deployment

# # on:
# #   push:
# #     branches: "main"

# # jobs:
# #   laravel-tests:
# #     runs-on: ubuntu-latest

# #     services:
# #       mysql:
# #         image: mysql:8.0
# #         env:
# #           MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
# #           MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
# #           MYSQL_USER: ${{ secrets.DB_USER }}
# #           MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
# #         ports:
# #           - 3306:3306
# #         options: --health-cmd="mysqladmin ping --password=root_password" --health-interval=10s --health-timeout=5s --health-retries=3

# #     steps:
# #       - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
# #         with:
# #           php-version: "8.2"
# #       - uses: actions/checkout@v3
# #       - name: Copy .env
# #         run: php -r "file_exists('.env') || copy('.env.example', '.env');"
# #       - name: Install Dependencies
# #         run: |
# #           composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
# #       - name: Generate key
# #         run: php artisan key:generate
# #       - name: Clear Config and Cache
# #         run: |
# #           php artisan config:clear
# #           php artisan cache:clear
# #           php artisan route:clear
# #       - name: Set Directory Permissions
# #         run: chmod -R 777 storage bootstrap/cache
# #       # - name: DB migrate
# #       #   run: php artisan migrate --force
# #       - name: Install Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: "18"
# #       - name: Install npm Dependencies
# #         run: |
# #           npm install -g npm@latest
# #           npm install typescript
# #           npm install @types/node@18
# #           npm cache clean --force
# #       # - name: Validate TypeScript
# #       #   run: npx tsc --noEmit
# #       - name: Build Frontend Assets
# #         run: npm run build
# #       - name: Debug â€“ List public folder
# #         run: ls -la public/
# #       - name: Upload Artifact
# #         uses: actions/upload-artifact@v3
# #         with:
# #           name: dist
# #           path: dist/
#       # - name: Deploy to Server
#       #   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
#       #   with:
#       #     server: ${{ secrets.FTP_SERVER }}
#       #     username: ${{ secrets.FTP_USERNAME }}
#       #     password: ${{ secrets.FTP_PASSWORD }}
#       #     server-dir: /


name: "blog"
on:
  push:
    branches: [main]

jobs:
  Build-and-Deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 500

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          # extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, bcmath, soap, zip, curl
          # coverage: none

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Copy .env file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Update .env file
        run: |
          sed -i "s/DB_HOST=.*/DB_HOST=127.0.0.1/" .env
          sed -i "s/DB_PORT=.*/DB_PORT=3306/" .env
          sed -i "s/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
          sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USER }}/" .env
          sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}/" .env
          sed -i "s/APP_ENV=.*/APP_ENV=production/" .env
          sed -i "s/APP_DEBUG=.*/APP_DEBUG=true/" .env

      - name: Install Composer Dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
        # tar -czvf vendor.tar.gz vendor/

      - name: Generate APP_KEY if missing
        run: |
          if ! grep -q "^APP_KEY=" .env || [ -z "$(grep '^APP_KEY=' .env | cut -d '=' -f 2)" ]; then
            php artisan key:generate
          fi

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Assets
        run: |
          npm run build
          if [ $? -ne 0 ]; then
            echo "Build failed"
            exit 1
          fi

      - name: Run Database Migrations
        run: php artisan migrate --force --verbose

      - name: Run Database Seeder
        run: php artisan db:seed --force

      - name: Create Storage Link
        run: php artisan storage:link

      - name: Deploy Build Files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./public/build/"
          server-dir: "3dh.blog.corelogic.cloud/public/build/"
          timeout: 7200000
          max-retries: 3
          retry-delay: 5000
          exclude: |
            **/.git*
            **/.git*/**

      - name: Deploy JS Files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./resources/js/"
          server-dir: "3dh.blog.corelogic.cloud/resources/js/"
          timeout: 7200000
          max-retries: 3
          retry-delay: 5000
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Deploy Main Application
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./"
          server-dir: "3dh.blog.corelogic.cloud/"
          timeout: 18000000
          max-retries: 3
          retry-delay: 5000
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**
            **/public/build/**
            **/resources/js/**
# **/vendor/**
